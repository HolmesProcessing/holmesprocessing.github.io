---
title: Gateway
subtitle: Tasking Validation and Routing
layout: default
modal-id: 1
category: project
date: 2014-07-18
img: gateway.svg
thumbnail: gateway.svg
alt: Gateway-img
repository: https://github.com/HolmesProcessing/Holmes-Gateway
documentation: https://holmes-processing.readthedocs.io/en/latest/rst/installation/index.html
license: https://github.com/HolmesProcessing/Holmes-Gateway/blob/master/LICENSE

---

##### Overview
Main program for receiving tasking and objects. It validates input, checks authentication, and pushes the requests to the pipeline.
Holmes-Gateway consists of two components:
The Master-Gateway and the Slave-Gateway (also known as Organizational Gateway).
Holmes-Gateway is meant to prevent a user from directly connecting to [Holmes-Storage](https://github.com/HolmesProcessing/Holmes-Storage) or RabbitMQ.
Instead tasking-requests and object upload pass through Holmes-Gateway, which performs validity checking, enforces ACL, and forwards the requests.

A user always connects to the Master-Gateway of their own organization.

If the user wants to upload samples, he sends the request to `/samples/` along with his credentials, and the request will be forwarded to storage.

If the user wants to task the system, he sends the request to `/task/` along with his credentials. The Master-Gateway will parse the submitted tasks and find partnering organizations (or the user's own organization) which have access to the sources that are specified by the tasks.
It will then forward the tasking-requests to the corresponding Slave-Gateways and these will check the task and forward it to to their Rabbit queues.
Slave-Gateways can be configured to only accept requests for certain services for certain organizations and to push different services into different queues.

This way Slave-Gateway can push long-lasting tasks (usually those that perform dynamic analysis) into different queues than quick tasks and thus distribute those tasks among different instances of [Holmes-Totem](https://github.com/HolmesProcessing/Holmes-Totem) and [Holmes-Totem-Dynamic](https://github.com/HolmesProcessing/Holmes-Totem-Dynamic).

##### Highlights
* Collaborative tasking: Holmes-Gateway allows organizations to enable other organizations to execute analysis-tasks on their samples without actually give them access to these samples.
* ACL enforcement: Users who want to submit tasks or new objects need to authenticate before they can do so. Also an organization can decide which services an other organization is allowed to execute on their samples.
* Central point for tasking and sample upload: Without Holmes-Gateway, a user who wants to task the system needs access to RabbitMQ, while a user who wants to upload samples needs access to Holmes-Storage.

